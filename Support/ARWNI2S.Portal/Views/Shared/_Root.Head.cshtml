@using DragonCorp.Metalink.Core;
@using DragonCorp.Metalink.Core.Configuration
@using DragonCorp.Metalink.Core.Domain.Common
@using DragonCorp.Metalink.Core.Domain.Gameplay;
@using DragonCorp.Metalink.Core.Domain.Nodes;
@using DragonCorp.Metalink.Core.Domain.Seo
@using DragonCorp.Metalink.Core.Events
@using DragonCorp.Metalink.Services.Security
@using DragonCorp.Metalink.Services.Users;

@inject AppSettings appSettings
@inject CommonSettings commonSettings
@inject GameplaySettings gameplaySettings
@inject IEventPublisher eventPublisher
@inject IPermissionService permissionService
@inject IUserService userService
@inject IWorkContext workContext
@inject SeoSettings seoSettings

@{
    var user = await workContext.GetCurrentUserAsync();
    var noauthTheme = (user != null && !(await userService.IsPlayerAsync(user) || await userService.IsAdminAsync(user)));

    //UNDONE: LONG TERM: Add rtl support
    // var supportRtl = await Html.ShouldUseRtlAsync();
    // DraCoHtml.AppendCssFileParts($"~/css/styles{(supportRtl ? ".rtl" : "")}.css");
    // DraCoHtml.AppendCssFileParts($"~/lib_npm/bootstrap/css/bootstrap{(supportRtl ? "-rtl" : "")}.min.css");

    //add icon library
    DraCoHtml.AppendCssFileParts("~/lib/line-awesome/css/line-awesome.min.css");
    //add main CSS file
    DraCoHtml.AppendCssFileParts($"~/css/styles.css");

    //add bootstrap CSS file
    DraCoHtml.AppendCssFileParts($"~/lib_npm/bootstrap/css/bootstrap.min.css");
    //add jQuery UI css file
    DraCoHtml.AppendCssFileParts("~/lib_npm/jquery-ui-dist/jquery-ui.min.css");

    if(noauthTheme)
        DraCoHtml.AppendPageCssClassParts("dc-noauth");

    if (gameplaySettings.DisplayAllPicturesOnGameplayPages)
    {
       DraCoHtml.AppendScriptParts(ResourceLocation.Footer, "~/lib_npm/swiper/swiper-bundle.min.js");
    }
    DraCoHtml.AppendScriptParts(ResourceLocation.Head, "~/js/public.countryselect.js");
    //UNDONE: Short Term: Add a new script for the ajax elements
    //DraCoHtml.AppendScriptParts(ResourceLocation.Footer, "~/js/public.ajaxcart.js");
    DraCoHtml.AppendScriptParts(ResourceLocation.Head, "~/js/public.common.js");
   
    //when jQuery migrate script logging is active you will see the log in the browser console
    if (commonSettings.JqueryMigrateScriptLoggingActive)
    {
        DraCoHtml.AppendScriptParts(ResourceLocation.Head, "~/lib_npm/jquery-migrate/jquery-migrate.js");
    }
    else
    {
        DraCoHtml.AppendScriptParts(ResourceLocation.Head, "~/lib_npm/jquery-migrate/jquery-migrate.min.js");
    }
    
    DraCoHtml.AppendScriptParts(ResourceLocation.Head, "~/lib_npm/jquery-ui-dist/jquery-ui.min.js");
    DraCoHtml.AppendScriptParts(ResourceLocation.Head, "~/lib_npm/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js");
    DraCoHtml.AppendScriptParts(ResourceLocation.Head, "~/lib_npm/jquery-validation/jquery.validate.min.js");
    DraCoHtml.AppendScriptParts(ResourceLocation.Head, "~/lib_npm/jquery/jquery.min.js");

    //custom tag(s);
    if (!string.IsNullOrEmpty(seoSettings.CustomHeadTags))
    {
        DraCoHtml.AppendHeadCustomParts(seoSettings.CustomHeadTags);
    }

    var displayMiniProfiler = appSettings.Get<CommonConfig>().MiniProfilerEnabled && await permissionService.AuthorizeAsync(StandardPermissionProvider.AccessProfiling);

    //event
    await eventPublisher.PublishAsync(new PageRenderingEvent(DraCoHtml));

    var title = await DraCoHtml.GenerateTitleAsync();
    var description = await @DraCoHtml.GenerateMetaDescriptionAsync();
    var keywords = await DraCoHtml.GenerateMetaKeywordsAsync();
}
<!DOCTYPE html>
@* TODO: remove cshtml comments or solve them *@
<html lang="@CultureInfo.CurrentUICulture.TwoLetterISOLanguageName" dir="@Html.GetUIDirection(@*!await Html.ShouldUseRtlThemeAsync()*@)" class="@DraCoHtml.GeneratePageCssClasses()">
<head>
    <title>@title</title>
    <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
    <meta name="description" content="@description" />
    <meta name="keywords" content="@keywords" />
    <meta name="generator" content="DragonCorp.Metalink" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="preconnect" href="https://fonts.googleapis.com"/>
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin/>
    <link href="https://fonts.googleapis.com/css2?family=VT323&display=swap" rel="stylesheet"/>
    <link href="https://fonts.googleapis.com/css2?family=Rajdhani&family=VT323&display=swap" rel="stylesheet" />
    @DraCoHtml.GenerateHeadCustom()
    @DraCoHtml.GenerateCssFiles()
    @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.HeadHtmlTag })
    @DraCoHtml.GenerateCanonicalUrls()
    @await Component.InvokeAsync(typeof(NewsRssHeaderLinkViewComponent))
    @await Component.InvokeAsync(typeof(BlogRssHeaderLinkViewComponent))
    @* Insert favicon and app icons head code *@
    @await Component.InvokeAsync(typeof(FaviconViewComponent))
    @if (displayMiniProfiler)
    {
        <mini-profiler />
    }
    @DraCoHtml.GenerateScripts(ResourceLocation.Head)
    @DraCoHtml.GenerateInlineScripts(ResourceLocation.Head)
    <!-- Created by ManOguaR - https://www.dragoncorp.org -->
    <!-- For open source attributions and license mentions you can see the github readme - https://github.com/dragoncorpgames/metalink-public/license.md -->
    @Html.Raw(commonSettings.HeaderCustomHtml)
    @* <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" /> *@
</head>
<body>
    <draco-antiforgery-token />
    @RenderBody()

    @DraCoHtml.GenerateScripts(ResourceLocation.Footer)
    @DraCoHtml.GenerateInlineScripts(ResourceLocation.Footer)

    @Html.Raw(commonSettings.FooterCustomHtml)
</body>
</html>
